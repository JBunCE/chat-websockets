{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SrConejoUwU\\\\Documents\\\\github\\\\cliente_servidor\\\\chatclient\\\\chat-app\\\\src\\\\component\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatRoom = () => {\n  _s();\n  const URI = \"http://localhost:8080\";\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState(\"CHATROOM\");\n  const [userData, setUserData] = useState({\n    username: '',\n    password: '',\n    receivername: '',\n    connected: false,\n    loginStatus: false,\n    logInApttemt: false,\n    message: ''\n  });\n  const [userReg, setUserReg] = useState({\n    username: '',\n    password: '',\n    pivotPassword: ''\n  });\n  useEffect(() => {\n    console.log(userData);\n  }, [userData]);\n  const connect = () => {\n    let Sock = new SockJS(URI + '/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const verify = () => {\n    let status;\n    fetch(URI + \"/login\");\n    return status;\n  };\n  const onConnected = () => {\n    setUserData({\n      ...userData,\n      \"connected\": true\n    });\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    userJoin();\n  };\n  const userJoin = () => {\n    let chatMessage = {\n      senderName: userData.username,\n      status: \"JOIN\"\n    };\n    stompClient.send(\"/app/messageInput\", {}, JSON.stringify(chatMessage));\n  };\n  const onMessageReceived = payload => {\n    console.log(payload);\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setPrivateChats(new Map(privateChats));\n        }\n        break;\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        break;\n    }\n  };\n  const onPrivateMessage = payload => {\n    console.log(payload);\n    var payloadData = JSON.parse(payload.body);\n    if (privateChats.get(payloadData.senderName)) {\n      privateChats.get(payloadData.senderName).push(payloadData);\n      setPrivateChats(new Map(privateChats));\n    } else {\n      let list = [];\n      list.push(payloadData);\n      privateChats.set(payloadData.senderName, list);\n      setPrivateChats(new Map(privateChats));\n    }\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"message\": value\n    });\n  };\n  const sendValue = () => {\n    console.log(stompClient);\n    if (stompClient) {\n      let chatMessage = {\n        senderName: userData.username,\n        content: userData.message,\n        status: \"MESSAGE\"\n      };\n      console.log(chatMessage);\n      stompClient.send(\"/app/messageInput\", {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n  const sendPrivateValue = () => {\n    if (stompClient) {\n      let chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        content: userData.message,\n        status: \"MESSAGE\"\n      };\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n      stompClient.send(\"/app/private-messageInput\", {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n  const handleUsername = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"username\": value\n    });\n  };\n  const handlePassword = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"password\": value\n    });\n  };\n  const handleRegUserName = event => {\n    const {\n      value\n    } = event.target;\n    setUserReg({\n      ...userReg,\n      \"username\": value\n    });\n  };\n  const handleRegUserPassword = event => {\n    const {\n      value\n    } = event.target;\n    setUserReg({\n      ...userReg,\n      \"password\": value\n    });\n  };\n  const registerUser = () => {\n    fetch(URI + \"/user/reg\", {\n      method: \"POST\",\n      body: userReg\n    }).then(response => response.json()).then(response => {\n      setUserData({\n        username: response.userName,\n        password: \"\",\n        connected: true\n      });\n    });\n    connect();\n  };\n  const signUser = () => {\n    connect();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(\"CHATROOM\");\n            },\n            className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), [...privateChats.keys()].map((name, index) => userData.username !== name && /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(name);\n            },\n            className: `member ${tab === name && \"active\"}`,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"\",\n              id: \"\",\n              cols: \"30\",\n              rows: \"10\",\n              children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 71\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: chat.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 29\n              }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar self\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            placeholder: \"select file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 34\n      }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 71\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regCont\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signin\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Iniciar sesion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"user-name\",\n          placeholder: \"Enter your name\",\n          name: \"userName\",\n          value: userData.username,\n          onChange: handleUsername,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"user-name\",\n          placeholder: \"Enter your password\",\n          name: \"userName\",\n          value: userData.password,\n          onChange: handlePassword,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this), !userData.loginStatus && userData.logInApttemt && /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Introduzca una credenciales basicas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: signUser,\n          children: \"connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Registrarse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"user-name\",\n          placeholder: \"Enter your user name\",\n          name: \"userNameReg\",\n          value: userReg.username,\n          onChange: handleRegUserName,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"user-name\",\n          placeholder: \"Enter your password\",\n          name: \"userReg\",\n          value: userReg.pivotPassword,\n          onChange: event => {\n            const {\n              value\n            } = event.target;\n            setUserReg({\n              ...userReg,\n              \"pivotPassword\": value\n            });\n          },\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"user-name\",\n          placeholder: \"repeat your password\",\n          name: \"userName\",\n          value: userReg.password,\n          onChange: handleRegUserPassword,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: registerUser,\n          children: \"register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"ExDwZfuDdYSXxWhA5mpSrroc+TY=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","jsxDEV","_jsxDEV","stompClient","ChatRoom","_s","URI","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","userData","setUserData","username","password","receivername","connected","loginStatus","logInApttemt","message","userReg","setUserReg","pivotPassword","console","log","connect","Sock","onConnected","onError","verify","status","fetch","subscribe","onMessageReceived","onPrivateMessage","userJoin","chatMessage","senderName","send","JSON","stringify","payload","payloadData","parse","body","get","set","push","list","err","handleMessage","event","value","target","sendValue","content","sendPrivateValue","receiverName","handleUsername","handlePassword","handleRegUserName","handleRegUserPassword","registerUser","method","then","response","json","userName","signUser","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","keys","map","name","index","chat","id","cols","rows","type","placeholder","onChange","margin","_c","$RefreshReg$"],"sources":["C:/Users/SrConejoUwU/Documents/github/cliente_servidor/chatclient/chat-app/src/component/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {over} from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\nvar stompClient =null;\r\nconst ChatRoom = () => {\r\n\r\n    const URI = \"http://localhost:8080\"\r\n    const [privateChats, setPrivateChats] = useState(new Map());     \r\n    const [publicChats, setPublicChats] = useState([]); \r\n    const [tab,setTab] =useState(\"CHATROOM\");\r\n    const [userData, setUserData] = useState({\r\n        username: '',\r\n        password: '',\r\n        receivername: '',\r\n        connected: false,\r\n        loginStatus: false,\r\n        logInApttemt: false,\r\n        message: ''\r\n      });\r\n    const [userReg, setUserReg] = useState({\r\n        username: '',\r\n        password: '',\r\n        pivotPassword: ''\r\n    })\r\n    useEffect(() => {\r\n      console.log(userData);\r\n    }, [userData]);\r\n\r\n    const connect =()=>{\r\n        let Sock = new SockJS(URI +'/ws');\r\n        stompClient = over(Sock);\r\n        stompClient.connect({},onConnected, onError);\r\n    }\r\n\r\n    const verify = () => {\r\n        let status;\r\n        fetch(URI + \"/login\")\r\n        return status;\r\n    }\r\n\r\n    const onConnected = () => {\r\n        setUserData({...userData,\"connected\": true});\r\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\r\n        stompClient.subscribe('/user/'+userData.username+'/private', onPrivateMessage);\r\n        userJoin();\r\n    }\r\n\r\n    const userJoin=()=>{\r\n          let chatMessage = {\r\n            senderName: userData.username,\r\n            status:\"JOIN\"\r\n          };\r\n          stompClient.send(\"/app/messageInput\", {}, JSON.stringify(chatMessage));\r\n    }\r\n\r\n    const onMessageReceived = (payload)=>{\r\n        console.log(payload);\r\n        var payloadData = JSON.parse(payload.body);\r\n        switch(payloadData.status){\r\n            case \"JOIN\":\r\n                if(!privateChats.get(payloadData.senderName)){\r\n                    privateChats.set(payloadData.senderName,[]);\r\n                    setPrivateChats(new Map(privateChats));\r\n                }\r\n                break;\r\n            case \"MESSAGE\":\r\n                publicChats.push(payloadData);\r\n                setPublicChats([...publicChats]);\r\n                break;\r\n        }\r\n    }\r\n    \r\n    const onPrivateMessage = (payload)=>{\r\n        console.log(payload);\r\n        var payloadData = JSON.parse(payload.body);\r\n        if(privateChats.get(payloadData.senderName)){\r\n            privateChats.get(payloadData.senderName).push(payloadData);\r\n            setPrivateChats(new Map(privateChats));\r\n        }else{\r\n            let list =[];\r\n            list.push(payloadData);\r\n            privateChats.set(payloadData.senderName,list);\r\n            setPrivateChats(new Map(privateChats));\r\n        }\r\n    }\r\n\r\n    const onError = (err) => {\r\n        console.log(err);\r\n        \r\n    }\r\n\r\n    const handleMessage =(event)=>{\r\n        const {value}=event.target;\r\n        setUserData({...userData,\"message\": value});\r\n    }\r\n\r\n    const sendValue=()=>{\r\n        console.log(stompClient);\r\n            if (stompClient) {\r\n              let chatMessage = {\r\n                senderName: userData.username,\r\n                content: userData.message,\r\n                status:\"MESSAGE\"\r\n              };\r\n              console.log(chatMessage);\r\n              stompClient.send(\"/app/messageInput\", {}, JSON.stringify(chatMessage));\r\n              setUserData({...userData,\"message\": \"\"});\r\n            }\r\n    }\r\n\r\n    const sendPrivateValue=()=>{\r\n        if (stompClient) {\r\n          let chatMessage = {\r\n            senderName: userData.username,\r\n            receiverName:tab,\r\n            content: userData.message,\r\n            status:\"MESSAGE\"\r\n          };\r\n          \r\n          if(userData.username !== tab){\r\n            privateChats.get(tab).push(chatMessage);\r\n            setPrivateChats(new Map(privateChats));\r\n          }\r\n          stompClient.send(\"/app/private-messageInput\", {}, JSON.stringify(chatMessage));\r\n          setUserData({...userData,\"message\": \"\"});\r\n        }\r\n    }\r\n\r\n    const handleUsername=(event)=>{\r\n        const {value}=event.target;\r\n        setUserData({...userData,\"username\": value});\r\n    }\r\n\r\n    const handlePassword=(event)=>{\r\n        const {value}=event.target;\r\n        setUserData({...userData,\"password\": value});\r\n    }\r\n\r\n    const handleRegUserName = (event) =>{\r\n        const {value}=event.target;\r\n        setUserReg({...userReg,\"username\": value});\r\n    }\r\n\r\n    const handleRegUserPassword = (event) =>{\r\n        const {value}=event.target;\r\n        setUserReg({...userReg,\"password\": value});\r\n    }\r\n\r\n    const registerUser=()=>{\r\n\r\n        fetch(URI + \"/user/reg\", {\r\n            method: \"POST\",\r\n            body: userReg\r\n        }).then(response => response.json())\r\n        .then(response =>{\r\n            setUserData({\r\n                username: response.userName,\r\n                password: \"\",\r\n                connected: true\r\n            })\r\n        })\r\n\r\n        connect();\r\n    }\r\n\r\n    const signUser = () =>{\r\n\r\n            connect();\r\n    }\r\n\r\n    return (\r\n    <div className=\"container\">\r\n        {userData.connected?\r\n        <div className=\"chat-box\">\r\n            <div className=\"member-list\">\r\n                <ul>\r\n                    <li onClick={()=>{setTab(\"CHATROOM\")}} className={`member ${tab===\"CHATROOM\" && \"active\"}`}>Chatroom</li>\r\n                    {[...privateChats.keys()].map((name,index)=>(\r\n                        userData.username !== name && \r\n                        <li onClick={()=>{setTab(name)}} className={`member ${tab===name && \"active\"}`} key={index}>{name}</li>     \r\n                    ))}\r\n                    \r\n                </ul>\r\n            </div>\r\n            {tab===\"CHATROOM\" && <div className=\"chat-content\">\r\n                <ul className=\"chat-messages\">\r\n                    {publicChats.map((chat,index)=>(\r\n                        <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\r\n                            <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">\r\n                            {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\r\n                            <div className=\"message-data\">{chat.content}</div>\r\n                            {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\r\n                            </textarea>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <div className='send-message'>\r\n                    <input type=\"file\" placeholder='select file' />\r\n                </div>\r\n                <div className=\"send-message\">\r\n                    <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} /> \r\n                    <button type=\"button\" className=\"send-button\" onClick={sendValue}>send</button>\r\n                </div>\r\n            </div>}\r\n            {tab!==\"CHATROOM\" && <div className=\"chat-content\">\r\n                <ul className=\"chat-messages\">\r\n                    {[...privateChats.get(tab)].map((chat,index)=>(\r\n                        <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\r\n                            {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\r\n                            <div className=\"message-data\">{chat.content}</div>\r\n                            {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n\r\n                <div className=\"send-message\">\r\n                    <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} /> \r\n                    <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>send</button>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n        :\r\n        <div className=\"regCont\">\r\n            <div className=\"signin\">\r\n\r\n                <h2>Iniciar sesion</h2>\r\n                \r\n                <input\r\n                    id=\"user-name\"\r\n                    placeholder=\"Enter your name\"\r\n                    name=\"userName\"\r\n                    value={userData.username}\r\n                    onChange={handleUsername}\r\n                    margin=\"normal\"\r\n                />\r\n\r\n                <input\r\n                    id=\"user-name\"\r\n                    placeholder=\"Enter your password\"\r\n                    name=\"userName\"\r\n                    value={userData.password}\r\n                    onChange={handlePassword}\r\n                    margin=\"normal\"\r\n                />\r\n\r\n                {(!userData.loginStatus && userData.logInApttemt) && <label>\r\n                    Introduzca una credenciales basicas\r\n                </label>}\r\n                \r\n                <button type=\"button\" onClick={signUser}>\r\n                    connect\r\n                </button> \r\n            </div>\r\n            <div className='signup'>\r\n            <h2>Registrarse</h2>\r\n            <input\r\n                    id=\"user-name\"\r\n                    placeholder=\"Enter your user name\"\r\n                    name=\"userNameReg\"\r\n                    value={userReg.username}\r\n                    onChange={handleRegUserName}\r\n                    margin=\"normal\"\r\n                />\r\n            <input\r\n                    id=\"user-name\"\r\n                    placeholder=\"Enter your password\"\r\n                    name=\"userReg\"\r\n                    value={userReg.pivotPassword}\r\n                    onChange={(event) => {\r\n                        const {value}=event.target;\r\n                        setUserReg({...userReg,\"pivotPassword\": value});\r\n                    }}\r\n                    margin=\"normal\"\r\n            />\r\n            <input\r\n                    id=\"user-name\"\r\n                    placeholder=\"repeat your password\"\r\n                    name=\"userName\"\r\n                    value={userReg.password}\r\n                    onChange={handleRegUserPassword}\r\n                    margin=\"normal\"\r\n            />\r\n                <button type=\"button\" onClick={registerUser}>\r\n                    register\r\n                </button> \r\n            </div> \r\n        </div>\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ChatRoom"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}